version: "3.9"  #首先是版本号，别乱写，这个是和Docker版本有对应的
services:   #services里面就是我们所有需要进行编排的服务了
  spring:   #服务名称，随便起
    container_name: roxy_blog_springboot  #一会要创建的容器名称
    build: .  #build表示使用构建的镜像，.表示使用当前目录下的Dockerfile进行构建
    volumes:
      - /docker/roxy_blog/log:/log
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    restart: always
  mysql:
    container_name: roxy_blog_mysql
    image: mysql:latest  #image表示使用对应的镜像，这里会自动从仓库下载，然后启动容器
    volumes:
      - /docker/mysql/config/conf.d:/etc/mysql/conf.d
      - /docker/mysql/data:/var/lib/mysql
      - /docker/mysql/log:/var/log/mysql
      - /docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment: #这里我们通过环境变量配置MySQL的root账号和密码
      MYSQL_ROOT_HOST: '%'   #登陆的主机，这里直接配置为'%'
      MYSQL_ROOT_PASSWORD: '404notfound.root'    #MySQL root账号的密码，别设定得太简单了
      MYSQL_DATABASE: 'roxy_blog'    #在启动时自动创建的数据库
      TZ: 'Asia/Shanghai'    #时区
    ports:
      - "3307:3306"    #把端口暴露出来，当然也可以不暴露，因为默认所有容器使用的是同一个网络
  redis:
    container_name: roxy_blog_mysql
    image: redis:last
    volumes:
      - /docker/redis/data:/data
      - /docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - /docker/redis/logs:/logs
    command:
      - /bin/bash -c "redis-server /usr/local/etc/redis/redis.conf"
    ports:
      - "6380:6379"