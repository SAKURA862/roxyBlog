<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roxy.blog.dao.CommentMapper">

    <insert id="saveComment" parameterType="com.roxy.blog.entity.Comment">
        insert into t_comment (nickname, email, content, avatar, create_time, blog_id, parent_comment_id, admin_comment)
        values (#{nickname}, #{email}, #{content}, #{avatar}, #{createTime}, #{blogId}, #{parentCommentId},
                #{adminComment});
    </insert>

    <select id="findByCommentId" resultType="com.roxy.blog.entity.Comment">
        select c.id,
               c.nickname,
               c.email,
               c.content,
               c.avatar,
               c.create_time,
               c.blog_id,
               c.parent_comment_id
        from t_comment c
        where c.id = #{id}
    </select>

    <select id="findByBlogId" resultType="com.roxy.blog.entity.Comment">
        WITH RECURSIVE cte (id, nickname, email, content, avatar, create_time, blog_id, parent_comment_id,
                            admin_comment, lv) as
                           (
                               select id,
                                      nickname,
                                      email,
                                      content,
                                      avatar,
                                      create_time,
                                      blog_id,
                                      parent_comment_id,
                                      admin_comment,
                                      0 as lv
                               from t_comment
                               where parent_comment_id = -1
                                 and blog_id = #{blogId}
                               union all
                               select c.id,
                                      c.nickname,
                                      c.email,
                                      c.content,
                                      c.avatar,
                                      c.create_time,
                                      c.blog_id,
                                      c.parent_comment_id,
                                      c.admin_comment,
                                      cte.lv + 1
                               from t_comment as c
                                        inner join cte
                                                   on c.parent_comment_id = cte.id
                           )
        select *
        from cte
    </select>


    <!--删除评论-->
    <delete id="deleteComment">
        WITH RECURSIVE cte (id, blog_id, parent_comment_id, lv) as
                           (
                               select id,
                                      blog_id,
                                      parent_comment_id,
                                      0 as lv
                               from t_comment
                                 where id = #{id}
                               union all
                               select c.id,
                                      c.blog_id,
                                      c.parent_comment_id,
                                      cte.lv + 1
                               from t_comment as c
                                        inner join cte
                                                   on c.parent_comment_id = cte.id
                           )
        delete from t_comment as tc
        where exists(
                      select cte.id
                      from cte
                      where cte.id = tc.id
                  );
    </delete>

</mapper>